// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: Dialog_Config.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace DA.Protobuf {

  /// <summary>Holder for reflection information generated from Dialog_Config.proto</summary>
  public static partial class DialogConfigReflection {

    #region Descriptor
    /// <summary>File descriptor for Dialog_Config.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static DialogConfigReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChNEaWFsb2dfQ29uZmlnLnByb3RvEgtwYWNrYWdlTmFtZSI5ChxEaWFsb2df",
            "Q29uZmlnX3NlbGZEYXRhX0FycmF5EgwKBG5hbWUYASABKAkSCwoDYWdlGAIg",
            "ASgNIpwBCg1EaWFsb2dfQ29uZmlnEgoKAmlkGAEgASgNEg8KB2NvbnRlbnQY",
            "AiABKAkSDgoGbmV4dElkGAMgASgNEhAKCGludEFycmF5GAQgAygFEhMKC3N0",
            "cmluZ0FycmF5GAUgAygJEjcKBGRhdGEYBiADKAsyKS5wYWNrYWdlTmFtZS5E",
            "aWFsb2dfQ29uZmlnX3NlbGZEYXRhX0FycmF5IpQBChFEaWFsb2dfQ29uZmln",
            "X01hcBI2CgRkYXRhGAEgAygLMigucGFja2FnZU5hbWUuRGlhbG9nX0NvbmZp",
            "Z19NYXAuRGF0YUVudHJ5GkcKCURhdGFFbnRyeRILCgNrZXkYASABKAUSKQoF",
            "dmFsdWUYAiABKAsyGi5wYWNrYWdlTmFtZS5EaWFsb2dfQ29uZmlnOgI4AUIO",
            "qgILREEuUHJvdG9idWZiBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::DA.Protobuf.Dialog_Config_selfData_Array), global::DA.Protobuf.Dialog_Config_selfData_Array.Parser, new[]{ "Name", "Age" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::DA.Protobuf.Dialog_Config), global::DA.Protobuf.Dialog_Config.Parser, new[]{ "Id", "Content", "NextId", "IntArray", "StringArray", "Data" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::DA.Protobuf.Dialog_Config_Map), global::DA.Protobuf.Dialog_Config_Map.Parser, new[]{ "Data" }, null, null, new pbr::GeneratedClrTypeInfo[] { null, })
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class Dialog_Config_selfData_Array : pb::IMessage<Dialog_Config_selfData_Array> {
    private static readonly pb::MessageParser<Dialog_Config_selfData_Array> _parser = new pb::MessageParser<Dialog_Config_selfData_Array>(() => new Dialog_Config_selfData_Array());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Dialog_Config_selfData_Array> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::DA.Protobuf.DialogConfigReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Dialog_Config_selfData_Array() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Dialog_Config_selfData_Array(Dialog_Config_selfData_Array other) : this() {
      name_ = other.name_;
      age_ = other.age_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Dialog_Config_selfData_Array Clone() {
      return new Dialog_Config_selfData_Array(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "age" field.</summary>
    public const int AgeFieldNumber = 2;
    private uint age_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Age {
      get { return age_; }
      set {
        age_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Dialog_Config_selfData_Array);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Dialog_Config_selfData_Array other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      if (Age != other.Age) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (Age != 0) hash ^= Age.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (Age != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(Age);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (Age != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Age);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Dialog_Config_selfData_Array other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.Age != 0) {
        Age = other.Age;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 16: {
            Age = input.ReadUInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class Dialog_Config : pb::IMessage<Dialog_Config> {
    private static readonly pb::MessageParser<Dialog_Config> _parser = new pb::MessageParser<Dialog_Config>(() => new Dialog_Config());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Dialog_Config> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::DA.Protobuf.DialogConfigReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Dialog_Config() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Dialog_Config(Dialog_Config other) : this() {
      id_ = other.id_;
      content_ = other.content_;
      nextId_ = other.nextId_;
      intArray_ = other.intArray_.Clone();
      stringArray_ = other.stringArray_.Clone();
      data_ = other.data_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Dialog_Config Clone() {
      return new Dialog_Config(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private uint id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "content" field.</summary>
    public const int ContentFieldNumber = 2;
    private string content_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Content {
      get { return content_; }
      set {
        content_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "nextId" field.</summary>
    public const int NextIdFieldNumber = 3;
    private uint nextId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint NextId {
      get { return nextId_; }
      set {
        nextId_ = value;
      }
    }

    /// <summary>Field number for the "intArray" field.</summary>
    public const int IntArrayFieldNumber = 4;
    private static readonly pb::FieldCodec<int> _repeated_intArray_codec
        = pb::FieldCodec.ForInt32(34);
    private readonly pbc::RepeatedField<int> intArray_ = new pbc::RepeatedField<int>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<int> IntArray {
      get { return intArray_; }
    }

    /// <summary>Field number for the "stringArray" field.</summary>
    public const int StringArrayFieldNumber = 5;
    private static readonly pb::FieldCodec<string> _repeated_stringArray_codec
        = pb::FieldCodec.ForString(42);
    private readonly pbc::RepeatedField<string> stringArray_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> StringArray {
      get { return stringArray_; }
    }

    /// <summary>Field number for the "data" field.</summary>
    public const int DataFieldNumber = 6;
    private static readonly pb::FieldCodec<global::DA.Protobuf.Dialog_Config_selfData_Array> _repeated_data_codec
        = pb::FieldCodec.ForMessage(50, global::DA.Protobuf.Dialog_Config_selfData_Array.Parser);
    private readonly pbc::RepeatedField<global::DA.Protobuf.Dialog_Config_selfData_Array> data_ = new pbc::RepeatedField<global::DA.Protobuf.Dialog_Config_selfData_Array>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::DA.Protobuf.Dialog_Config_selfData_Array> Data {
      get { return data_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Dialog_Config);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Dialog_Config other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (Content != other.Content) return false;
      if (NextId != other.NextId) return false;
      if(!intArray_.Equals(other.intArray_)) return false;
      if(!stringArray_.Equals(other.stringArray_)) return false;
      if(!data_.Equals(other.data_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      if (Content.Length != 0) hash ^= Content.GetHashCode();
      if (NextId != 0) hash ^= NextId.GetHashCode();
      hash ^= intArray_.GetHashCode();
      hash ^= stringArray_.GetHashCode();
      hash ^= data_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(Id);
      }
      if (Content.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Content);
      }
      if (NextId != 0) {
        output.WriteRawTag(24);
        output.WriteUInt32(NextId);
      }
      intArray_.WriteTo(output, _repeated_intArray_codec);
      stringArray_.WriteTo(output, _repeated_stringArray_codec);
      data_.WriteTo(output, _repeated_data_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Id);
      }
      if (Content.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Content);
      }
      if (NextId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(NextId);
      }
      size += intArray_.CalculateSize(_repeated_intArray_codec);
      size += stringArray_.CalculateSize(_repeated_stringArray_codec);
      size += data_.CalculateSize(_repeated_data_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Dialog_Config other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      if (other.Content.Length != 0) {
        Content = other.Content;
      }
      if (other.NextId != 0) {
        NextId = other.NextId;
      }
      intArray_.Add(other.intArray_);
      stringArray_.Add(other.stringArray_);
      data_.Add(other.data_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadUInt32();
            break;
          }
          case 18: {
            Content = input.ReadString();
            break;
          }
          case 24: {
            NextId = input.ReadUInt32();
            break;
          }
          case 34:
          case 32: {
            intArray_.AddEntriesFrom(input, _repeated_intArray_codec);
            break;
          }
          case 42: {
            stringArray_.AddEntriesFrom(input, _repeated_stringArray_codec);
            break;
          }
          case 50: {
            data_.AddEntriesFrom(input, _repeated_data_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class Dialog_Config_Map : pb::IMessage<Dialog_Config_Map> {
    private static readonly pb::MessageParser<Dialog_Config_Map> _parser = new pb::MessageParser<Dialog_Config_Map>(() => new Dialog_Config_Map());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Dialog_Config_Map> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::DA.Protobuf.DialogConfigReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Dialog_Config_Map() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Dialog_Config_Map(Dialog_Config_Map other) : this() {
      data_ = other.data_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Dialog_Config_Map Clone() {
      return new Dialog_Config_Map(this);
    }

    /// <summary>Field number for the "data" field.</summary>
    public const int DataFieldNumber = 1;
    private static readonly pbc::MapField<int, global::DA.Protobuf.Dialog_Config>.Codec _map_data_codec
        = new pbc::MapField<int, global::DA.Protobuf.Dialog_Config>.Codec(pb::FieldCodec.ForInt32(8), pb::FieldCodec.ForMessage(18, global::DA.Protobuf.Dialog_Config.Parser), 10);
    private readonly pbc::MapField<int, global::DA.Protobuf.Dialog_Config> data_ = new pbc::MapField<int, global::DA.Protobuf.Dialog_Config>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<int, global::DA.Protobuf.Dialog_Config> Data {
      get { return data_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Dialog_Config_Map);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Dialog_Config_Map other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!Data.Equals(other.Data)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= Data.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      data_.WriteTo(output, _map_data_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += data_.CalculateSize(_map_data_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Dialog_Config_Map other) {
      if (other == null) {
        return;
      }
      data_.Add(other.data_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            data_.AddEntriesFrom(input, _map_data_codec);
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
